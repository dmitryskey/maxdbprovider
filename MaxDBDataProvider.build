<project name="MaxDBDataProvider" default="net" xmlns="http://nant.sf.net/schemas/nant-0.84.win32.net-1.0.xsd">
	<description>ADO.NET Provider for MaxDB</description>

	<property name="nunit-framework-net" value="C:\Program Files (x86)\NUnit 2.6.2\bin\framework" />
	<property name="nunit-net" value="C:\Program Files (x86)\NUnit 2.6.2\bin" />
	<property name="nunit-framework-mono" value="/usr/lib/cli/nunit.framework-2.4" />
	<property name="nunit-mono" value="/usr/lib/nunit" />

	<property name="fxcop.executable" value="D:\Program Files\Microsoft FxCop 1.35\fxcopcmd.exe"/>

	<!-- filesets -->
	<fileset id="Sources">
		<include name="MaxDBDataProvider/*.cs"/>
		<include name="MaxDBDataProvider/MaxDBProtocol/*.cs"/>
		<include name="MaxDBDataProvider/Utils/*.cs"/>
		<exclude name="MaxDBDataProvider/MaxDBMessages.Designer.cs"/>
	</fileset>

	<property name="debug" value="false" overwrite="false"/>
	
	<!-- by default optimize release binaries -->
	<property name="opt" value="true"/>
	<property name="buildType" value="release"/>

	<if test="${(debug)}">
		<property name="opt" value="false"/>
		<property name="buildType" value="debug"/>
	</if>

	<if test="${not property::exists('defines')}">
		<property name="defines" value=""/>
	</if>

	<if test="${not property::exists('build.dir')}">
		<property name="build.dir" value="."/>
	</if>

	<!-- builds the client on .Net Framework-->
	<target name="net" depends="net-2.0 net-4.0">
		<!--
		<call target="Docs"/>
		-->
	</target>

	<!-- builds the client for Mono Frameworks -->
	<target name="mono" depends="mono-2.0">
		<!--
		<call target="Docs"/>
		-->
	</target>

	<!-- provider target -->	
	<target name="provider" description="MaxDB Data Provider target">
		<property name="nant.settings.currentframework" value="${framework}"/>
		<property name="outdir" value="bin/${framework}/${buildType}"/>

		<property name="keyfile" value=""/>
		<if test="${framework=='net-2.0'}">
			<property name="keyfile" value="/keyfile:MaxDBDataProvider.snk"/>
		</if>
		
		<mkdir dir="${outdir}" failonerror="false"/>
		<resgen input="MaxDBDataProvider/MaxDBMessages.resx" output="MaxDBDataProvider/MaxDBMessages.resources"/>
		<csc output="${outdir}/MaxDB.Data.dll" target="library" doc="${outdir}/MaxDB.Data.xml" define="${defines}" debug="${debug}" optimize="${opt}">
			<resources>
				<include name="MaxDBDataProvider/MaxDBMessages.resources"/>
			</resources>
			<references>
				<include name="System.Data.dll"/>
			</references>
			<sources refid="Sources"/>
			<arg value="${keyfile}"/>
		</csc>
		<csc output="${outdir}/MaxDB.Test.exe" target="exe" define="${defines}" debug="${debug}" optimize="${opt}">
			<sources>
				<include name="MaxDBConsole/*.cs" />
				<include name="MaxDBConsole/UnitTesting/*.cs" />
			</sources>
			<references>
				<include name="${outdir}/MaxDB.Data.dll"/>
				<include name="System.Data.dll"/>		
				<include name="System.Drawing.dll"/>
				<include name="System.Configuration.dll"/>
				<include name="${nunit-lib}/nunit.framework.dll"/>
			</references>
		</csc>
	</target>

	<!-- target .Net 2.0 -->
	<target name="net-2.0" description=".NET 2.0 target">
		<property name="nunit-lib" value="${nunit-framework-net}"/>
		<property name="framework" value="net-2.0"/>
		<call target="provider"/>
	</target>

	<!-- target .Net 4.0 -->
	<target name="net-4.0" description=".NET 2.4 target">
		<property name="nunit-lib" value="${nunit-framework-net}"/>
		<property name="framework" value="net-4.0"/>
		<call target="provider"/>
	</target>

	<!-- target Mono 2.0 -->
	<target name="mono-2.0" description="Mono 2.0 target">
		<property name="nunit-lib" value="${nunit-framework-mono}"/>
		<property name="framework" value="mono-2.0"/>
		<call target="provider"/>
	</target>

	<!-- FxCop targets -->
	<target name="fxcop-all" depends="fxcop-net-2.0" />

	<!-- target FxCop .Net 2.0 -->
	<target name="fxcop-net-2.0" depends="net-2.0">
		<property name="framework" value="net-2.0"/>
		<call target="fxcop"/>
	</target>
                 
	<!-- testing targets -->
	<target name="test-net">
		<call target="test-net-2.0"/>
		<call target="test-net-4.0"/>
	</target>

	<target name="test-mono">
		<call target="test-mono-2.0"/>
	</target>

	<target name="test-net-2.0" depends="net-2.0">
		<property name="nunit-lib" value="${nunit-framework-net}"/>
		<property name="nunit-console" value="${nunit-net}/nunit-console.exe"/>
		<property name="framework" value="net-2.0"/>
		<call target="testdb"/>
	</target>

	<target name="test-net-4.0" depends="net-4.0">
		<property name="nunit-lib" value="${nunit-framework-net}"/>
		<property name="nunit-console" value="${nunit-net}/nunit-console.exe"/>
		<property name="framework" value="net-4.0"/>
		<call target="testdb"/>
	</target>

	<target name="test-mono-2.0" depends="mono-2.0">
		<property name="nunit-lib" value="${nunit-framework-mono}"/>
		<property name="nunit-console" value="${nunit-mono}/nunit-console.exe"/>
		<property name="framework" value="mono-2.0"/>
		<call target="testdb"/>
	</target>

	<!-- execute the test suite against a single database instance, possibly using coverage	-->
	<target name="testdb" description="Target to test a database with all possible configurations">
		<mkdir dir="results"/>

		<property name="workdir" value="bin/${framework}/${buildType}"/>
		<property name="outfile" value="nunit-${framework}-${buildType}.xml"/>

		<property name="testfile" value="MaxDB.Test.exe"/>

		<copy file="MaxDBConsole/Configs/MaxDB.config" tofile="${workdir}/${testfile}.config" overwrite="true"/>
		<copy file="${nunit-lib}/nunit.framework.dll" tofile="${workdir}/nunit.framework.dll" overwrite="true"/>

		<exec program="${nunit-console}" commandline="/framework:${framework} /nologo /xml=../../../results/${outfile} ${testfile}" failonerror="false" workingdir="${workdir}"/>
	</target>

	<!-- Run fxcop on the current build -->	
	<target name="fxcop" description="Runs FXCop">
		<mkdir dir="results"/>

		<property name="outdir" value="${framework}/${buildType}"/>
		<property name="outfile" value="FxCop-${framework}-${buildType}.xml"/>

		<exec program="${fxcop.executable}" 
			commandline="/o:results/${outfile} /f:bin/${outdir}/MaxDB.Data.dll /s"
			failonerror="false"/>
	</target>

        <!-- Remove all generated files target -->
	<target name="clean" description="Remove all generated files">
		<delete failonerror="false">
			<fileset>
				<include name="bin/**" />
				<include name="results/*" />
            		</fileset>
		</delete>
	</target>
</project>