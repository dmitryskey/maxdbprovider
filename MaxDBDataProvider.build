<project name="MaxDBDataProvider" default="net" xmlns="http://nant.sf.net/schemas/nant-0.84.win32.net-1.0.xsd">
	<description>ADO.NET Provider for MaxDB</description>

	<property name="nunit-Net-1.1" value="D:\Program Files\NUnit 2.2.7" />
	<property name="nunit-Net-2.0" value="D:\Program Files\NUnit-Net-2.0 2.2.7" />
	<property name="nunit-Mono-1.0" value="/usr/lib/mono/1.0" />
	<property name="nunit-Mono-2.0" value="/usr/lib/mono/2.0" />

	<property name="MaxDB-7.5" value="gunichevvm" />
	<property name="MaxDB-7.6" value="sheep" />
	<property name="UnicodeDB" value="uhoteldb" />
	<property name="AsciiDB" value="hoteldb" />

	<property name="fxcop.executable" value="D:\Program Files\Microsoft FxCop 1.35\fxcopcmd.exe"/>

	<!-- filesets -->
	<fileset id="Sources">
		<include name="MaxDBDataProvider/*.cs"/>
		<include name="MaxDBDataProvider/MaxDBProtocol/*.cs"/>
		<include name="MaxDBDataProvider/Utils/*.cs"/>
		<exclude name="MaxDBDataProvider/MaxDBMessages.Designer.cs"/>
	</fileset>

	<property name="debug" value="false" overwrite="false"/>
	
	<!-- we default to optimized release binaries -->
	<property name="opt" value="true"/>
	<property name="buildType" value="release"/>

	<if test="${(debug)}">
		<property name="opt" value="false"/>
		<property name="buildType" value="debug"/>
	</if>

	<if test="${not property::exists('defines')}">
		<property name="defines" value=""/>
	</if>

	<if test="${not property::exists('build.dir')}">
		<property name="build.dir" value="."/>
	</if>

	<!-- builds the client on all supported .Net Frameworks -->
	<target name="net" depends="net-1.1-safe net-1.1-unsafe net-2.0-safe net-2.0-unsafe">
		<!--
		<call target="Docs"/>
		-->
	</target>

	<!-- builds the client on all supported Mono Frameworks -->
	<target name="mono" depends="mono-1.0-safe mono-1.0-unsafe mono-2.0-safe mono-2.0-unsafe">
		<!--
		<call target="Docs"/>
		-->
	</target>

	<!-- provider target -->	
	<target name="provider" description="MaxDB Data Provider target">
		<property name="nant.settings.currentframework" value="${framework}"/>
		<if test="${unsafe=='true'}">
			<property name="outdir" value="bin/${framework}/unsafe/${buildType}"/>
		</if>

		<if test="${unsafe=='false'}">
			<property name="outdir" value="bin/${framework}/safe/${buildType}"/>
		</if>

		<if test="${unsafe=='false' and framework=='net-1.1'}">
			<copy file="org.mentalis.security.dll" tofile="${outdir}/org.mentalis.security.dll" overwrite="true"/>
		</if>
		
		<mkdir dir="${outdir}" failonerror="false"/>
		<resgen input="MaxDBDataProvider/MaxDBMessages.resx" output="MaxDBDataProvider/MaxDBMessages.resources"/>
		<csc output="${outdir}/MaxDB.Data.dll" target="library" unsafe="${unsafe}"
			define="${defines}" debug="${debug}" optimize="${opt}">
			<resources>
				<include name="MaxDBDataProvider/MaxDBMessages.resources"/>
			</resources>
			<references>
				<include name="System.Data.dll"/>
				<include name="Mono.Security.dll"/>
				<include name="org.mentalis.security.dll"/>		
			</references>
			<sources refid="Sources"/>
		</csc>
		<csc output="${outdir}/MaxDB.Test.exe" target="exe" unsafe="true"
			define="${defines}" debug="${debug}" optimize="${opt}">
			<sources>
				<include name="MaxDBConsole/*.cs" />
				<include name="MaxDBConsole/UnitTesting/*.cs" />
			</sources>
			<references>
				<include name="${outdir}/MaxDB.Data.dll"/>
				<include name="System.Data.dll"/>		
				<include name="System.Drawing.dll"/>
				<include name="${nunit-lib}/nunit.framework.dll"/>
			</references>
		</csc>
	</target>

	<!-- target .Net 1.1 Safe-->
	<target name="net-1.1-safe" description=".NET 1.1 safe target">
		<property name="nunit-lib" value="${nunit-Net-1.1}/bin"/>
		<property name="framework" value="net-1.1"/>
		<property name="defines" value="SAFE" />
		<property name="unsafe" value="false"/>
		<call target="provider"/>
	</target>

	<!-- target .Net 1.1 Unsafe-->
	<target name="net-1.1-unsafe" description=".NET 1.1 unsafe target">
		<property name="nunit-lib" value="${nunit-Net-1.1}/bin"/>
		<property name="framework" value="net-1.1"/>
		<property name="defines" value="" />
		<property name="unsafe" value="true"/>
		<call target="provider"/>
	</target>

	<!-- target .Net 2.0 Safe-->
	<target name="net-2.0-safe" description=".NET 2.0 safe target">
		<property name="nunit-lib" value="${nunit-Net-2.0}/bin"/>
		<property name="framework" value="net-2.0"/>
		<property name="defines" value="SAFE;NET20" />
		<property name="unsafe" value="false"/>
		<call target="provider"/>
	</target>

	<!-- target .Net 2.0 Unsafe-->
	<target name="net-2.0-unsafe" description=".NET 2.0 unsafe target">
		<property name="nunit-lib" value="${nunit-Net-2.0}/bin"/>
		<property name="framework" value="net-2.0"/>
		<property name="defines" value="NET20" />
		<property name="unsafe" value="true"/>
		<call target="provider"/>
	</target>

	<!-- target Mono 1.0 Safe-->
	<target name="mono-1.0-safe" description="Mono 1.0 safe target">
		<property name="nunit-lib" value="${nunit-Mono-1.0}"/>
		<property name="framework" value="mono-1.0"/>
		<property name="defines" value="SAFE;MONO" />
		<property name="unsafe" value="false"/>
		<call target="provider"/>
	</target>

	<!-- target Mono 1.0 Unsafe-->
	<target name="mono-1.0-unsafe" description="Mono 1.0 unsafe target">
		<property name="nunit-lib" value="${nunit-Mono-1.0}"/>
		<property name="framework" value="mono-1.0"/>
		<property name="defines" value="MONO" />
		<property name="unsafe" value="true"/>
		<call target="provider"/>
	</target>

	<!-- target Mono 2.0 Safe-->
	<target name="mono-2.0-safe" description="Mono 2.0 safe target">
		<property name="nunit-lib" value="${nunit-Mono-2.0}"/>
		<property name="framework" value="mono-2.0"/>
		<property name="defines" value="SAFE;NET20;MONO" />
		<property name="unsafe" value="false"/>
		<call target="provider"/>
	</target>

	<!-- target Mono 2.0 Unsafe-->
	<target name="mono-2.0-unsafe" description="Mono 2.0 unsafe target">
		<property name="nunit-lib" value="${nunit-Mono-2.0}"/>
		<property name="framework" value="mono-2.0"/>
		<property name="defines" value="NET20;MONO" />
		<property name="unsafe" value="true"/>
		<call target="provider"/>
	</target>

	<!-- FxCop targets -->
	<target name="allfxcops" depends="fxcop-net-1.1-safe, fxcop-net-1.1-unsafe, fxcop-net-2.0-safe, fxcop-net-2.0-unsafe">
	</target>

	<!-- target FxCop .Net 1.1 Safe-->
	<target name="fxcop-net-1.1-safe" depends="net-1.1-safe">
		<property name="framework" value="net-1.1"/>
		<property name="defines" value="SAFE" />
		<property name="unsafe" value="false"/>
		<call target="fxcop"/>
	</target>

	<!-- target FxCop .Net 1.1 Unsafe-->
	<target name="fxcop-net-1.1-unsafe" depends="net-1.1-unsafe">
		<property name="framework" value="net-1.1"/>
		<property name="defines" value=""/>
		<property name="unsafe" value="true"/>
		<call target="fxcop"/>
	</target>

	<!-- target FxCop .Net 2.0 Safe-->
	<target name="fxcop-net-2.0-safe" depends="net-2.0-safe">
		<property name="framework" value="net-2.0"/>
		<property name="defines" value="SAFE;NET20" />
		<property name="unsafe" value="false"/>
		<call target="fxcop"/>
	</target>

	<!-- target FxCop .Net 2.0 Unsafe-->
	<target name="fxcop-net-2.0-unsafe" depends="net-2.0-unsafe">
		<property name="framework" value="net-2.0"/>
		<property name="defines" value="NET20" />
		<property name="unsafe" value="true"/>
		<call target="fxcop"/>
	</target>
                 
	<!-- testing targets -->
	<target name="test-net">
		<call target="test-7.6-net"/>
		<call target="test-7.5-net"/>
	</target>

	<target name="test-mono">
		<property name="test-target" value="tests-mono"/>
		<call target="test-7.6"/>
		<call target="test-7.5"/>
	</target>

	<target name="test-7.6-net">
		<property name="test-target" value="tests-net"/>
		<call target="test-7.6-ascii"/>
		<call target="test-7.6-unicode"/>
	</target>

	<target name="test-7.5-net">
		<property name="test-target" value="tests-net"/>
		<call target="test-7.5-ascii"/>
		<call target="test-7.5-unicode"/>
	</target>

	<target name="test-7.6-mono">
		<property name="test-target" value="tests-mono"/>
		<call target="test-7.6-ascii"/>
		<call target="test-7.6-unicode"/>
	</target>

	<target name="test-7.5-mono">
		<property name="test-target" value="tests-mono"/>
		<call target="test-7.5-ascii"/>
		<call target="test-7.5-unicode"/>
	</target>

	<target name="test-7.6-unicode">
		<mkdir dir="results"/>

		<!-- test 7.6 Unicode -->		
		<echo message="Testing MaxDB 7.6 UNICODE"/>
		<echo message="Starting database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.6} -d ${UnicodeDB} -u dba,dba db_online" failonerror="true"/>
		<property name="config" value="MaxDB_76_UNICODE"/>

		<call target="${test-target}"/>

		<echo message="Stopping database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.6} -d ${UnicodeDB} -u dba,dba db_stop" failonerror="true"/>
	</target>

	<target name="test-7.6-ascii">
		<mkdir dir="results"/>

		<!-- test 7.6 ASCII -->		
		<echo message="Testing MaxDB 7.6 ASCII"/>
		<echo message="Starting database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.6} -d ${AsciiDB} -u dba,dba db_online" failonerror="true"/>
		<property name="config" value="MaxDB_76"/>

		<call target="${test-target}"/>

		<echo message="Stopping database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.6} -d ${AsciiDB} -u dba,dba db_stop" failonerror="true"/>
	</target>

	<target name="test-7.5-unicode">
		<mkdir dir="results"/>

		<!-- test 7.5 Unicode -->		
		<echo message="Testing MaxDB 7.5 UNICODE"/>
		<echo message="Starting database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.5} -d ${UnicodeDB} -u dba,dba db_online" failonerror="true"/>
		<property name="config" value="MaxDB_75_UNICODE"/>

		<call target="${test-target}"/>

		<echo message="Stopping database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.5} -d ${UnicodeDB} -u dba,dba db_stop" failonerror="true"/>
	</target>

	<target name="test-7.5-ascii">
		<mkdir dir="results"/>

		<!-- test 7.5 ASCII -->		
		<echo message="Testing MaxDB 7.5 ASCII"/>
		<echo message="Starting database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.5} -d ${AsciiDB} -u dba,dba db_online" failonerror="true"/>
		<property name="config" value="MaxDB_75"/>

		<call target="${test-target}"/>

		<echo message="Stopping database instance"/>
		<exec program="dbmcli" commandline="-n ${MaxDB-7.5} -d ${AsciiDB} -u dba,dba db_stop" failonerror="true"/>
	</target>

	<target name="tests-net">
                <call target="test-net-1.1-safe"/>
		<call target="test-net-1.1-unsafe"/>
		<call target="test-net-2.0-safe"/>
		<call target="test-net-2.0-unsafe"/>
	</target>

	<target name="tests-mono">
                <call target="test-mono-1.0-safe"/>
		<call target="test-mono-1.0-unsafe"/>
		<call target="test-mono-2.0-safe"/>
		<call target="test-mono-2.0-unsafe"/>
	</target>
	
	<target name="test-net-1.1-safe" depends="net-1.1-safe">
		<property name="nunit-lib" value="${nunit-Net-1.1}/bin"/>
		<property name="framework" value="net-1.1"/>
		<property name="unsafe" value="false"/>
		<call target="testdb"/>
	</target>

	<target name="test-net-1.1-unsafe" depends="net-1.1-unsafe">
		<property name="nunit-lib" value="${nunit-Net-1.1}/bin"/>
		<property name="framework" value="net-1.1"/>
		<property name="unsafe" value="true"/>
		<call target="testdb"/>
	</target>

	<target name="test-net-2.0-safe" depends="net-2.0-safe">
		<property name="nunit-lib" value="${nunit-Net-2.0}/bin"/>
		<property name="framework" value="net-2.0"/>
		<property name="unsafe" value="false"/>
		<call target="testdb"/>
	</target>

	<target name="test-net-2.0-unsafe" depends="net-2.0-unsafe">
		<property name="nunit-lib" value="${nunit-Net-2.0}/bin"/>
		<property name="framework" value="net-2.0"/>
		<property name="unsafe" value="true"/>
		<call target="testdb"/>
	</target>

	<target name="test-mono-1.0-safe" depends="mono-1.0-safe">
        	<property name="nunit" value="${nunit-Mono-1.0}"/>
		<property name="framework" value="mono-1.0"/>
		<property name="unsafe" value="false"/>
		<call target="testdb"/>
	</target>

	<target name="test-mono-1.0-unsafe" depends="mono-1.0-unsafe">
        	<property name="nunit" value="${nunit-Mono-1.0}"/>
		<property name="framework" value="mono-1.0"/>
		<property name="unsafe" value="true"/>
		<call target="testdb"/>
	</target>

	<target name="test-mono-2.0-safe" depends="mono-2.0-safe">
        	<property name="nunit" value="${nunit-Mono-2.0}"/>
		<property name="framework" value="mono-2.0"/>
		<property name="unsafe" value="false"/>
		<call target="testdb"/>
	</target>

	<target name="test-mono-2.0-unsafe" depends="mono-2.0-unsafe">
        	<property name="nunit" value="${nunit-Mono-2.0}"/>
		<property name="framework" value="mono-2.0"/>
		<property name="unsafe" value="true"/>
		<call target="testdb"/>
	</target>

	<!-- execute the test suite against a single database instance, possibly using coverage	-->
	<target name="testdb" description="Target to test a database with all possible configurations">
		<property name="nunit-exe" value="${nunit-lib}/nunit-console.exe"/>

		<if test="${unsafe=='true'}">
			<property name="testfile" value="bin/${framework}/unsafe/${buildType}/MaxDB.Test.exe"/>
			<property name="outfile" value="nunit-${framework}-unsafe-${buildType}-${config}.xml"/>
		</if>

		<if test="${unsafe=='false'}">
			<property name="testfile" value="bin/${framework}/safe/${buildType}/MaxDB.Test.exe"/>
			<property name="outfile" value="nunit-${framework}-safe-${buildType}-${config}.xml"/>
		</if>

		<copy file="MaxDBConsole/Configs/${config}.config" tofile="${testfile}.config" overwrite="true"/>

		<exec program="${nunit-exe}" commandline="/nologo /xml=results/${outfile} ${testfile}" failonerror="false"/>
	</target>

	<!-- Run fxcop on the current build -->	
	<target name="fxcop" description="Runs FXCop">
		<mkdir dir="results"/>

		<if test="${unsafe=='true'}">
			<property name="outdir" value="${framework}/unsafe/${buildType}"/>
			<property name="outfile" value="FxCop-${framework}-unsafe-${buildType}.xml"/>
		</if>

		<if test="${unsafe=='false'}">
			<property name="outdir" value="${framework}/safe/${buildType}"/>
			<property name="outfile" value="FxCop-${framework}-safe-${buildType}.xml"/>
		</if>

		<exec program="${fxcop.executable}" 
			commandline="/o:results/${outfile} /f:bin/${outdir}/MaxDB.Data.dll /s"
			failonerror="false"/>
	</target>

        <!-- Remove all generated files target -->
	<target name="clean" description="Remove all generated files">
		<delete failonerror="false">
			<fileset>
				<include name="bin/**" />
				<include name="results/*" />
            		</fileset>
		</delete>
	</target>

</project>