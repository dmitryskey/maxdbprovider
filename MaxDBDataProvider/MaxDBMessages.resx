<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="error_connection_notopened" xml:space="preserve">
    <value>Connection is not opened.</value>
  </data>
  <data name="error_valueoverflow" xml:space="preserve">
    <value>Parameter {0}: value too large.</value>
    <comment>{0} - position of parameter</comment>
  </data>
  <data name="error_databaseexception" xml:space="preserve">
    <value>[{0}] (at {1}): {2}</value>
    <comment>{0} - vendor code, {1} - error position, {2} - reason (localized)</comment>
  </data>
  <data name="error_databaseexception_woerrpos" xml:space="preserve">
    <value>[{0}]: {1}</value>
    <comment>{0} - vendor code, {1} - reason (localized)</comment>
  </data>
  <data name="error_invalid_columnindex" xml:space="preserve">
    <value>Invalid column index {0}.</value>
    <comment>{0} - the column index</comment>
  </data>
  <data name="error_invalid_columnname" xml:space="preserve">
    <value>Invalid column {0}.</value>
    <comment>{0} - the column name</comment>
  </data>
  <data name="error_objectisclosed" xml:space="preserve">
    <value>Object is closed.</value>
  </data>
  <data name="error_timeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="error_longdata_expected" xml:space="preserve">
    <value>Expected a longdata part as reply to getval.</value>
  </data>
  <data name="error_conversion_sqlnet" xml:space="preserve">
    <value>Cannot convert SQL type {0} to _NET type {1}.</value>
    <comment>{0} - SQL type, {1} - _NET type</comment>
  </data>
  <data name="error_conversion_netsql" xml:space="preserve">
    <value>Cannot convert _NET type {0} to SQL type {1}.</value>
    <comment>{0} - _NET type, {1} - SQL type</comment>
  </data>
  <data name="error_conversion_data" xml:space="preserve">
    <value>Cannot convert data {0} to type {1}.</value>
    <comment>{0} - Data, {1} - Type</comment>
  </data>
  <data name="unknowntype" xml:space="preserve">
    <value>&lt;unknown&gt;</value>
  </data>
  <data name="error_conversion_VDNnumber" xml:space="preserve">
    <value>Cannot convert VDN number [{0}].</value>
    <comment>{0} - _NET type</comment>
  </data>
  <data name="error_conversion_SpecialNullValue" xml:space="preserve">
    <value>Result of arithmetic operation leads to an overflow or a division by 0.</value>
  </data>
  <data name="error_movebackwardinblob" xml:space="preserve">
    <value>Moving backwards in Blob is not supported.</value>
  </data>
  <data name="error_asciireadfromlong" xml:space="preserve">
    <value>Cannot read ASCII data from this LONG column.</value>
  </data>
  <data name="error_binaryreadfromlong" xml:space="preserve">
    <value>Cannot read binary data from this LONG column.</value>
  </data>
  <data name="error_asciiputtolong" xml:space="preserve">
    <value>Cannot put ASCII data into this LONG column.</value>
  </data>
  <data name="error_binaryputtolong" xml:space="preserve">
    <value>Cannot put binary data into this LONG column.</value>
  </data>
  <data name="error_sqlstatement_null" xml:space="preserve">
    <value>SQL statement is null.</value>
  </data>
  <data name="error_columnvalue_null" xml:space="preserve">
    <value>Failed to get the value since column's value is NULL</value>
  </data>
  <data name="error_adapter_null" xml:space="preserve">
    <value>Data adapter is null.</value>
  </data>
  <data name="error_select_null" xml:space="preserve">
    <value>Select command is null.</value>
  </data>
  <data name="error_basetable_notfound" xml:space="preserve">
    <value>Base table name is not found_ Propably FOR UPDATE suffix is not specified.</value>
  </data>
  <data name="error_sqlstatement_toolong" xml:space="preserve">
    <value>SQL statement is too long_ Increase the DB parameter PACKET_SIZE.</value>
  </data>
  <data name="error_missinginout" xml:space="preserve">
    <value>IN or OUT param missing at position {0}.</value>
    <comment>{0} - parameter position (number)</comment>
  </data>
  <data name="error_sqlstatement_resultset" xml:space="preserve">
    <value>SQL statement would generate a result set.</value>
  </data>
  <data name="error_sqlcommand_noresultset" xml:space="preserve">
    <value>SQL command doesn't return a result set.</value>
  </data>
  <data name="error_colindex_notfound" xml:space="preserve">
    <value>Column index {0} was not found.</value>
    <comment>{0} - the column index (number)</comment>
  </data>
  <data name="error_colname_notfound" xml:space="preserve">
    <value>Column name {0} was not found.</value>
    <comment>{0} - the column name</comment>
  </data>
  <data name="error_sqlstatement_noprocedure" xml:space="preserve">
    <value>SQL statement does not call a DB procedure.</value>
  </data>
  <data name="error_special_number_unsupported" xml:space="preserve">
    <value>The number value {0} is not supported.</value>
    <comment>{0} - the NaN or INF value</comment>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>No user name given.</value>
  </data>
  <data name="error_nopassword" xml:space="preserve">
    <value>No password given.</value>
  </data>
  <data name="error_invalidpassword" xml:space="preserve">
    <value>The password is invalid.</value>
  </data>
  <data name="error_nodata_found" xml:space="preserve">
    <value>No data found.</value>
  </data>
  <data name="error_invalid_datatype" xml:space="preserve">
    <value>Invalid data type.</value>
  </data>
  <data name="error_unknown_datatype" xml:space="preserve">
    <value>Unknown data type.</value>
  </data>
  <data name="error_resultset_beforefirst" xml:space="preserve">
    <value>Result set is positioned before first row.</value>
  </data>
  <data name="error_resultset_afterlast" xml:space="preserve">
    <value>Result set is positioned after last row.</value>
  </data>
  <data name="error_unnamed_parameter" xml:space="preserve">
    <value>Parameter must be named.</value>
  </data>
  <data name="error_no_columnnames" xml:space="preserve">
    <value>Could not get column names from database kernel.</value>
  </data>
  <data name="error_internal_connectionnull" xml:space="preserve">
    <value>Internal error: connection field is null, but should not.</value>
  </data>
  <data name="error_internal_unexpectedinput" xml:space="preserve">
    <value>Internal error: input parameter at index {0} was not expected.</value>
  </data>
  <data name="error_internal_unexpectedoutput" xml:space="preserve">
    <value>Internal error: output parameter at index {0} was not expected.</value>
  </data>
  <data name="error_internal_invalidParseid" xml:space="preserve">
    <value>Internal error: parse id is null.</value>
  </data>
  <data name="error_host_connect" xml:space="preserve">
    <value>Cannot connect to host {0}:{1}.</value>
    <comment>{0} - host name, {1} - port name</comment>
  </data>
  <data name="error_recv_connect" xml:space="preserve">
    <value>Receive of connect failed.</value>
  </data>
  <data name="error_connectreply_garbled" xml:space="preserve">
    <value>Reply is garbled.</value>
  </data>
  <data name="error_chunkoverflow" xml:space="preserve">
    <value>Read {0} bytes at position {1} in buffer of length {2}.</value>
    <comment>{0} - bytes still to read (number), {1} - read bytes (number), {2} - buffer length (number)</comment>
  </data>
  <data name="error_admin_reconnect" xml:space="preserve">
    <value>Reconnect for admin session not supported.</value>
  </data>
  <data name="error_stream_ioexception" xml:space="preserve">
    <value>IO Exception in stream read: {0}</value>
  </data>
  <data name="error_stream_conversion_string" xml:space="preserve">
    <value>Character data argument cannot be converted to binary/structured stream.</value>
  </data>
  <data name="error_stream_conversion_bytes" xml:space="preserve">
    <value>Binary data argument cannot be converted to character/structured stream.</value>
  </data>
  <data name="error_stream_isatend" xml:space="preserve">
    <value>Stream is empty or already closed.</value>
  </data>
  <data name="error_conversion_structuretype" xml:space="preserve">
    <value>Structure member {0} has unsupported data type {1}.</value>
  </data>
  <data name="error_structure_arraywronglength" xml:space="preserve">
    <value>Number of items in input and structure do not match (required {0}, input was {1}).</value>
  </data>
  <data name="error_structure_element_null" xml:space="preserve">
    <value>Input structure element #{0} is null.</value>
  </data>
  <data name="error_structure_element_conversion" xml:space="preserve">
    <value>Conversion of structure element of type {0} from {1} is not possible.</value>
  </data>
  <data name="error_structure_element_overflow" xml:space="preserve">
    <value>Conversion of structure element of type {0} failed (overflow), value was {1}.</value>
  </data>
  <data name="error_invalid_startposition" xml:space="preserve">
    <value>Internal error: Invalid start position for LONG data.</value>
  </data>
  <data name="error_fetch_nodatapart" xml:space="preserve">
    <value>Fetch operation delivered no data part.</value>
  </data>
  <data name="error_connection_wrongserverchallengereceived" xml:space="preserve">
    <value>Connect failed, wrong format of server challenge [{0}] </value>
  </data>
  <data name="error_connection_challengeresponsenotsupported" xml:space="preserve">
    <value>Secure connect using challenge response authentication is not supported</value>
  </data>
  <data name="commerror_ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="commerror_connectiondown" xml:space="preserve">
    <value>Connection down, session released</value>
  </data>
  <data name="commerror_tasklimit" xml:space="preserve">
    <value>Task limit</value>
  </data>
  <data name="commerror_timeout" xml:space="preserve">
    <value>Time out</value>
  </data>
  <data name="commerror_crash" xml:space="preserve">
    <value>Crash</value>
  </data>
  <data name="commerror_restartrequired" xml:space="preserve">
    <value>Restart required</value>
  </data>
  <data name="commerror_shutdown" xml:space="preserve">
    <value>Shutdown</value>
  </data>
  <data name="commerror_sendlinedown" xml:space="preserve">
    <value>Send line down</value>
  </data>
  <data name="commerror_recvlinedown" xml:space="preserve">
    <value>Receive line down</value>
  </data>
  <data name="commerror_packetlimit" xml:space="preserve">
    <value>Packet limit</value>
  </data>
  <data name="commerror_released" xml:space="preserve">
    <value>Released</value>
  </data>
  <data name="commerror_wouldblock" xml:space="preserve">
    <value>Would block</value>
  </data>
  <data name="commerror_unknownrequest" xml:space="preserve">
    <value>Unknown request</value>
  </data>
  <data name="commerror_serverdbunknown" xml:space="preserve">
    <value>Server or DB unknown</value>
  </data>
  <data name="error_exec_failed" xml:space="preserve">
    <value>Execution failed</value>
  </data>
  <data name="error_getobject_failed" xml:space="preserve">
    <value>getObject function failed</value>
  </data>
  <data name="error_dbnull_unknown" xml:space="preserve">
    <value>Column nullable unknown</value>
  </data>
  <data name="error_param_trunc" xml:space="preserve">
    <value>Parameter truncated</value>
  </data>
  <data name="error_oms_unsupported" xml:space="preserve">
    <value>OMS stream object is not supported</value>
  </data>
  <data name="error_tabledirect_unsupported" xml:space="preserve">
    <value>TableDirect parameter is not supported</value>
  </data>
  <data name="error_statement_cancelled" xml:space="preserve">
    <value>SQL statement cancelled.</value>
  </data>
  <data name="error_ssl_certificate" xml:space="preserve">
    <value>Certificate error:</value>
  </data>
  <data name="error_connection_isolationlevel" xml:space="preserve">
    <value>Can not set isolation level</value>
  </data>
  <data name="error_fetch_data" xml:space="preserve">
    <value>Fetch data error</value>
  </data>
  <data name="error_columnname_buffer" xml:space="preserve">
    <value>Can not allocate buffer for the column name</value>
  </data>
  <data name="error_batchprocout" xml:space="preserve">
    <value>Called DB procedure in batch contained OUT or INOUT parameters.</value>
  </data>
  <data name="error_batchresultset" xml:space="preserve">
    <value>SQL statement in batch would create a result set.</value>
  </data>
  <data name="error_batchresultset_withnumber" xml:space="preserve">
    <value>Batch command number {0} generates a result set</value>
    <comment>{0} - command number</comment>
  </data>
  <data name="error_batchmissingin" xml:space="preserve">
    <value>Missing IN/INOUT parameter at row {0} and position {1}.</value>
    <comment>{0} - row number (number), {1} - position (number)</comment>
  </data>
</root>